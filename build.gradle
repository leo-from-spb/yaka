group 'lb.yaka'


buildscript {
    ext.kotlin_version = '1.3.71'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'


sourceSets {
    main {
        kotlin.srcDirs = ['yaka/src']
        java.srcDirs = []
        resources.srcDirs = []
    }
    test {
        kotlin.srcDirs = ['yaka/tests']
        java.srcDirs = []
        resources.srcDirs = []
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    api                "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.71"
    runtimeOnly        "org.jetbrains.kotlin:kotlin-reflect:1.3.71"
    testImplementation "org.junit.jupiter:junit-jupiter:5.6.1"
}



task testJar(type: Jar, dependsOn: testClasses) {
    archiveBaseName = "${project.archivesBaseName}-tests"
    from sourceSets.test.output
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


artifacts {
    archives testJar
    archives sourcesJar
}

task preparePom(type: Copy) {
    from file("yaka/odds/yaka.pom")
    into file("out")
    rename "yaka.pom", "yaka-${version}.pom"
    filter { line -> line.replaceAll('SNAPSHOT',version) }
}

task jars(dependsOn: [assemble,testJar,sourcesJar]) {
}

task dist(dependsOn: [jars,preparePom], type: Copy) {
    from "build/libs"
    into "out"
    include "*.jar"
}

test {
    useJUnitPlatform() {
        includeTags 'UnitTest'
        includeEngines 'junit-jupiter'
    }
}


clean {
    delete "out"
}
