group 'lb.yaka'


buildscript {
    ext.kotlin_version = '1.6.10'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'maven-publish'


java {
    withJavadocJar()
    withSourcesJar()
}


sourceSets {
    main {
        kotlin.srcDirs = ['yaka/src']
        java.srcDirs = []
        resources.srcDirs = []
    }
    test {
        kotlin.srcDirs = ['yaka/tests']
        java.srcDirs = []
        resources.srcDirs = []
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "11"
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://packages.jetbrains.team/maven/p/dm/maven"
        credentials {
            username = spaceUsername
            password = spacePassword
        }
    }
}

dependencies {
    api                "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.10"
    runtimeOnly        "org.jetbrains.kotlin:kotlin-reflect:1.6.10"
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.2"
}



task testJar(type: Jar, dependsOn: testClasses) {
    archiveBaseName = "${project.archivesBaseName}-tests"
    from sourceSets.test.output
}



artifacts {
    archives testJar
    archives sourcesJar
}

task preparePom(type: Copy) {
    from file("yaka/odds/yaka.pom")
    into file("out")
    rename "yaka.pom", "yaka-${version}.pom"
    filter { line -> line.replaceAll('SNAPSHOT',version) }
}

task jars(dependsOn: [assemble,testJar,sourcesJar]) {
}

task dist(dependsOn: [jars,preparePom], type: Copy) {
    from "build/libs"
    into "out"
    include "*.jar"
}

test {
    useJUnitPlatform() {
        includeTags 'UnitTest'
        includeEngines 'junit-jupiter'
    }
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId = "lb.yaka"
            artifactId = "yaka"
            version = version
            from components.java
        }
    }
    repositories {
        maven {
            url "https://packages.jetbrains.team/maven/p/dm/maven"
            credentials {
                username = spaceUsername
                password = spacePassword
            }
        }
    }
}


clean {
    delete "out"
}
